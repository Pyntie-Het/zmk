/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    model = "fissure";
    compatible = "fissure";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
		zmk,matrix_transform = &transform;
		/* zmk,underglow = &neopixel; */
    };

#define K(n) RC(0,n)
	transform: transform {
		compatible = "zmk,matrix-transform";
		columns = <11>;
		rows = <4>;
		map = <
K(21) K(22) K(23) K(24) K(25)  K(5)  K(4)  K(3)  K(2)  K(1)  K(0)
K(27) K(28) K(29) K(30) K(31)  K(11) K(10) K(9)  K(8)  K(7)  K(6)
K(32) K(33) K(34) K(35) K(36)  K(16) K(15) K(14) K(13) K(12)
            K(37) K(38) K(39)  K(19) K(18) K(17)
		>;
	};

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-direct";

        label = "KSCAN";
        input-gpios
            = <&gpio0  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1  6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1  2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>

            , <&gpio0  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1  3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1  1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>

            , <&gpio1  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 24 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>

            , <&gpio0 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

    leds {
        compatible = "gpio-leds";
        blue_led: led_0 {
            gpios = <&gpio1 04 GPIO_ACTIVE_HIGH>;
            label = "Blue LED";
        };
    };

    ext-power {
        compatible = "zmk,ext-power-generic";
        label = "EXT_POWER";
        control-gpios = <&gpio0 7 GPIO_ACTIVE_LOW>;
    };

    vbatt {
        compatible = "zmk,battery-voltage-divider";
        label = "BATTERY";
        io-channels = <&adc 1>;
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 2000000)>;
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&usbd {
    status = "okay";
};


&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "mbr";
            reg = <0x00000000 0x00001000>;
        };
        code_partition: partition@1000 {
            label = "code_partition";
            reg = <0x00001000 0x000d3000>;
        };

        /*
         * The flash starting at 0x000d4000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@d4000 {
            label = "storage";
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};

/* &qspi { */
/*     status = "okay"; */
/*     sck-pin = <26>; */
/*     io-pins = <8>, <40>; */
/*     csn-pins = <25>; */
/*     nor-flash { */
/*         compatible = "nordic,qspi-nor"; */
/*         label = "steno flash"; */
/*         status = "okay"; */
/*         sck-delay = <2>; */
/*         sck-frequency = <8000000> */

/*         jedec-id = [20 ba 18]; */
/*         size = <0x8000000>; */
/*         has-dpd; */
/*         t-enter-dpd = <3000>; */
/*         t-exit-dpd = <30000>; */
/*     }; */
/* }; */

&i2c0 {
    compatible = "nordic,nrf-twi";
    status = "okay";
    sda-pin = <32>;
    scl-pin = <22>;

	oled: ssd1306@3c {
		compatible = "solomon,ssd1306fb";
        status = "okay";
		reg = <0x3c>;
		label = "DISPLAY";
		width = <128>;
		height = <32>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <31>;
		segment-remap;
		com-invdir;
		com-sequential;
		prechargep = <0x22>;
	};
};

/* &spi1 { */
/* 	compatible = "nordic,nrf-spim"; */
/* 	/1* Cannot be used together with i2c0. *1/ */
/* 	status = "okay"; */
/* 	mosi-pin = <19>; */
/* 	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself. */
/* 	sck-pin = <6>; */
/* 	miso-pin = <11>; */

/* 	neopixel: ws2812@0 { */
/* 		compatible = "worldsemi,ws2812-spi"; */
/* 		label = "SK6812mini"; */

/* 		/1* SPI *1/ */
/* 		reg = <0>; /1* ignored, but necessary for SPI bindings *1/ */
/* 		spi-max-frequency = <4000000>; */

/* 		/1* WS2812 *1/ */
/* 		chain-length = <1>; */
/* 		spi-one-frame = <0x70>; */
/* 		spi-zero-frame = <0x40>; */
/* 	}; */
/* }; */
